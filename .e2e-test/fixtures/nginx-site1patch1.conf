# TLS-enabled website
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Listen on the domain
    server_name site1.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site1.local/nginx-error.log error;

    # TLS
    ssl_certificate /data/sites/site1.local/tls/certificate.pem;
    ssl_certificate_key /data/sites/site1.local/tls/key.pem;
    ssl_dhparam /data/misc/dhparams.pem;

    # Webroot
    root /data/sites/site1.local/www;
    index index.html index.htm;

    # Error pages
    
    location / {
        
            try_files $uri $uri/ =404;
        
    }
    

    # Rules for specific locations/files
    

    # Block access to the manifest file
    location = /_statiko.yaml {
        return 404;
    }

    # ACME challenges are proxied to the API server
    location ~ ^/\.well-known\/acme\-challenge {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_ssl_verify off;
        proxy_pass https://localhost:2265;
    }

    # Rewrites
    
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;

    # Listen on the domain and on the aliases if any
    server_name site1.local testsite.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site1.local/nginx-error.log error;

    # Redirect to the HTTPS website
    return 301 https://site1.local$request_uri;
}


# Redirect aliases (on HTTPS) to the canonical host
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # Listen on the wrong hosts
    server_name testsite.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site1.local/nginx-error.log error;

    # TLS
    ssl_certificate /data/sites/site1.local/tls/certificate.pem;
    ssl_certificate_key /data/sites/site1.local/tls/key.pem;
    ssl_dhparam /data/misc/dhparams.pem;

    # Redirect to the canonical host
    return 301 https://site1.local$request_uri;
}




