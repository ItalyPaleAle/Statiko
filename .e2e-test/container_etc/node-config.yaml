# State storage configuration
state:
  # Store state in etcd
  store: "etcd"

  # Configuration for connecting to etcd
  etcd:
    # Prefix for keys used by Statiko in etcd
    # Defaults to "/statiko" if not set
    keyPrefix: "/statiko"
    # Timeout in ms
    # Defaults to 10000 if not set
    timeout: 10000
    # List of etcd node addresses to connect to, comma-separated
    # For example: "http://host01:2379,http://host02:2379"
    # Note that your Statiko nodes must be able to connect to all those nodes, so configure your firewall rules accordingly
    # If you want to use TLS, change the protocol to "https", for example:
    # "https://host01:2379,https://host02:2379"
    address: "http://localhost:2379,http://etcd:2379"
    # TLS certificate configuration connecting for etcd
    # This might be necessary if you're using TLS
    tlsConfiguration:
      # Certificate Authority that signed the certificate
      # This is used for both the server certificate and the client certificate (if configured)
      ca: ""
      # Public client certificate for the client
      # This is used for client authentication if desired
      clientCertificate: ""
      # Private key file for the client
      # This is used for client authentication if desired
      clientKey: ""
    # Skip verifying TLS certificates presented by etcd nodes
    # Defaults to "false" if not set
    tlsSkipVerify: false


# Authorization for managing the node
auth:
  # Authorize with a pre-shared key
  psk:
    # Enabled
    enabled: yes
    # Key
    # Can also be passed with environmental variable AUTH_KEY
    key: "hello world"

  # Authorize with an OAuth 2.0 access token issued by Azure AD
  azureAD:
    # Enabled
    enabled: yes
    # Tenant ID of the application used to authenticate users
    # Can also be passed with environmental variable AUTH_AZUREAD_TENANT_ID
    tenantId: "1ea3c9a2-b58b-48c7-b5ce-ca311c3c1196"    
    # Client ID of the application used to authenticate users
    # Can also be passed with environmental variable AUTH_AZUREAD_CLIENT_ID
    # DEV NOTE: in development, we're using the same app for both Azure AD authentication and as an Azure Service Principal. Not recommended in production, however
    clientId: "478f8d4c-d845-478d-bff9-63a0258ee5b1"

# Encryption key for secrets. Must be a base64-encoded (standard encoding) key of 128-bit (16 byte).
# Generate it with a command like `openssl rand 16 | base64`
# Can also be passed with environmental variable SECRETS_ENCRYPTION_KEY
secretsEncryptionKey: "aQZg30UrCUgu0TfdNvIeLg=="

# Azure configuration
azure:
  # Service Principal details
  sp:
    # Can also be passed with environmental variable AZURE_TENANT_ID
    tenantId: "1ea3c9a2-b58b-48c7-b5ce-ca311c3c1196"
    # Can also be passed with environmental variable AZURE_CLIENT_ID
    clientId: "478f8d4c-d845-478d-bff9-63a0258ee5b1"
    # Can also be passed with environmental variable AZURE_CLIENT_SECRET
    clientSecret: ""

  # Azure Storage
  storage:
    # Storage account name
    # Can also be passed with environmental variable AZURE_STORAGE_ACCOUNT
    account: "statikocistorage"

  # Azure Key Vault
  keyVault:
    # Name of the Key Vault
    # Can also be passed with environmental variable AZURE_KEYVAULT_NAME
    name: "statiko-ci-akv"

    # Code signing key
    codesignKey:
      # Name of the code signing key inside the Key Vault
      # Can also be passed with environmental variable CODESIGN_KEY_NAME
      name: "codesign"

# Node name (optional; will default to the hostname)
# Can also be passed with environmental variable NODE_NAME
nodeName: "e2e-test"
